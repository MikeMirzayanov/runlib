// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.6
// source: Execution.proto

package contester_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedirectParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename                 string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Memory                   bool   `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Buffer                   *Blob  `protobuf:"bytes,3,opt,name=buffer,proto3" json:"buffer,omitempty"`
	RemoteFilename           string `protobuf:"bytes,4,opt,name=remote_filename,json=remoteFilename,proto3" json:"remote_filename,omitempty"`
	RemoteAuthorizationToken string `protobuf:"bytes,5,opt,name=remote_authorization_token,json=remoteAuthorizationToken,proto3" json:"remote_authorization_token,omitempty"`
}

func (x *RedirectParameters) Reset() {
	*x = RedirectParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Execution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedirectParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectParameters) ProtoMessage() {}

func (x *RedirectParameters) ProtoReflect() protoreflect.Message {
	mi := &file_Execution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectParameters.ProtoReflect.Descriptor instead.
func (*RedirectParameters) Descriptor() ([]byte, []int) {
	return file_Execution_proto_rawDescGZIP(), []int{0}
}

func (x *RedirectParameters) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *RedirectParameters) GetMemory() bool {
	if x != nil {
		return x.Memory
	}
	return false
}

func (x *RedirectParameters) GetBuffer() *Blob {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *RedirectParameters) GetRemoteFilename() string {
	if x != nil {
		return x.RemoteFilename
	}
	return ""
}

func (x *RedirectParameters) GetRemoteAuthorizationToken() string {
	if x != nil {
		return x.RemoteAuthorizationToken
	}
	return ""
}

type ExecutionResultFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Killed                 bool `protobuf:"varint,1,opt,name=killed,proto3" json:"killed,omitempty"`
	TimeLimitHit           bool `protobuf:"varint,2,opt,name=time_limit_hit,json=timeLimitHit,proto3" json:"time_limit_hit,omitempty"`
	MemoryLimitHit         bool `protobuf:"varint,3,opt,name=memory_limit_hit,json=memoryLimitHit,proto3" json:"memory_limit_hit,omitempty"`
	Inactive               bool `protobuf:"varint,4,opt,name=inactive,proto3" json:"inactive,omitempty"`
	StdoutOverflow         bool `protobuf:"varint,6,opt,name=stdout_overflow,json=stdoutOverflow,proto3" json:"stdout_overflow,omitempty"`
	StderrOverflow         bool `protobuf:"varint,7,opt,name=stderr_overflow,json=stderrOverflow,proto3" json:"stderr_overflow,omitempty"`
	StdpipeTimeout         bool `protobuf:"varint,8,opt,name=stdpipe_timeout,json=stdpipeTimeout,proto3" json:"stdpipe_timeout,omitempty"`
	TimeLimitHitPost       bool `protobuf:"varint,9,opt,name=time_limit_hit_post,json=timeLimitHitPost,proto3" json:"time_limit_hit_post,omitempty"`
	MemoryLimitHitPost     bool `protobuf:"varint,10,opt,name=memory_limit_hit_post,json=memoryLimitHitPost,proto3" json:"memory_limit_hit_post,omitempty"`
	ProcessLimitHit        bool `protobuf:"varint,11,opt,name=process_limit_hit,json=processLimitHit,proto3" json:"process_limit_hit,omitempty"`
	StoppedBySignal        bool `protobuf:"varint,12,opt,name=stopped_by_signal,json=stoppedBySignal,proto3" json:"stopped_by_signal,omitempty"` // linux: SIGSTOP/PTRACE
	KilledBySignal         bool `protobuf:"varint,13,opt,name=killed_by_signal,json=killedBySignal,proto3" json:"killed_by_signal,omitempty"`    // linux: WTERMSIG
	KernelTimeLimitHit     bool `protobuf:"varint,14,opt,name=kernel_time_limit_hit,json=kernelTimeLimitHit,proto3" json:"kernel_time_limit_hit,omitempty"`
	KernelTimeLimitHitPost bool `protobuf:"varint,15,opt,name=kernel_time_limit_hit_post,json=kernelTimeLimitHitPost,proto3" json:"kernel_time_limit_hit_post,omitempty"`
	WallTimeLimitHit       bool `protobuf:"varint,16,opt,name=wall_time_limit_hit,json=wallTimeLimitHit,proto3" json:"wall_time_limit_hit,omitempty"`
}

func (x *ExecutionResultFlags) Reset() {
	*x = ExecutionResultFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Execution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionResultFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResultFlags) ProtoMessage() {}

func (x *ExecutionResultFlags) ProtoReflect() protoreflect.Message {
	mi := &file_Execution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResultFlags.ProtoReflect.Descriptor instead.
func (*ExecutionResultFlags) Descriptor() ([]byte, []int) {
	return file_Execution_proto_rawDescGZIP(), []int{1}
}

func (x *ExecutionResultFlags) GetKilled() bool {
	if x != nil {
		return x.Killed
	}
	return false
}

func (x *ExecutionResultFlags) GetTimeLimitHit() bool {
	if x != nil {
		return x.TimeLimitHit
	}
	return false
}

func (x *ExecutionResultFlags) GetMemoryLimitHit() bool {
	if x != nil {
		return x.MemoryLimitHit
	}
	return false
}

func (x *ExecutionResultFlags) GetInactive() bool {
	if x != nil {
		return x.Inactive
	}
	return false
}

func (x *ExecutionResultFlags) GetStdoutOverflow() bool {
	if x != nil {
		return x.StdoutOverflow
	}
	return false
}

func (x *ExecutionResultFlags) GetStderrOverflow() bool {
	if x != nil {
		return x.StderrOverflow
	}
	return false
}

func (x *ExecutionResultFlags) GetStdpipeTimeout() bool {
	if x != nil {
		return x.StdpipeTimeout
	}
	return false
}

func (x *ExecutionResultFlags) GetTimeLimitHitPost() bool {
	if x != nil {
		return x.TimeLimitHitPost
	}
	return false
}

func (x *ExecutionResultFlags) GetMemoryLimitHitPost() bool {
	if x != nil {
		return x.MemoryLimitHitPost
	}
	return false
}

func (x *ExecutionResultFlags) GetProcessLimitHit() bool {
	if x != nil {
		return x.ProcessLimitHit
	}
	return false
}

func (x *ExecutionResultFlags) GetStoppedBySignal() bool {
	if x != nil {
		return x.StoppedBySignal
	}
	return false
}

func (x *ExecutionResultFlags) GetKilledBySignal() bool {
	if x != nil {
		return x.KilledBySignal
	}
	return false
}

func (x *ExecutionResultFlags) GetKernelTimeLimitHit() bool {
	if x != nil {
		return x.KernelTimeLimitHit
	}
	return false
}

func (x *ExecutionResultFlags) GetKernelTimeLimitHitPost() bool {
	if x != nil {
		return x.KernelTimeLimitHitPost
	}
	return false
}

func (x *ExecutionResultFlags) GetWallTimeLimitHit() bool {
	if x != nil {
		return x.WallTimeLimitHit
	}
	return false
}

type ExecutionResultTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTimeMicros   uint64 `protobuf:"varint,1,opt,name=user_time_micros,json=userTimeMicros,proto3" json:"user_time_micros,omitempty"`
	KernelTimeMicros uint64 `protobuf:"varint,2,opt,name=kernel_time_micros,json=kernelTimeMicros,proto3" json:"kernel_time_micros,omitempty"`
	WallTimeMicros   uint64 `protobuf:"varint,3,opt,name=wall_time_micros,json=wallTimeMicros,proto3" json:"wall_time_micros,omitempty"`
}

func (x *ExecutionResultTime) Reset() {
	*x = ExecutionResultTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Execution_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionResultTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResultTime) ProtoMessage() {}

func (x *ExecutionResultTime) ProtoReflect() protoreflect.Message {
	mi := &file_Execution_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResultTime.ProtoReflect.Descriptor instead.
func (*ExecutionResultTime) Descriptor() ([]byte, []int) {
	return file_Execution_proto_rawDescGZIP(), []int{2}
}

func (x *ExecutionResultTime) GetUserTimeMicros() uint64 {
	if x != nil {
		return x.UserTimeMicros
	}
	return 0
}

func (x *ExecutionResultTime) GetKernelTimeMicros() uint64 {
	if x != nil {
		return x.KernelTimeMicros
	}
	return 0
}

func (x *ExecutionResultTime) GetWallTimeMicros() uint64 {
	if x != nil {
		return x.WallTimeMicros
	}
	return 0
}

var File_Execution_proto protoreflect.FileDescriptor

var file_Execution_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xde, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f,
	0x62, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x97, 0x05, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6b, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x68, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x48, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x48, 0x69,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x74, 0x64, 0x70, 0x69, 0x70, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x74, 0x64, 0x70, 0x69, 0x70,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x48, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x48, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x48, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x42, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6b, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x15,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x68, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x48, 0x69, 0x74, 0x12,
	0x3a, 0x0a, 0x1a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x48, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x77,
	0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x68,
	0x69, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x77, 0x61, 0x6c, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x48, 0x69, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x61,
	0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x42, 0x4b, 0x0a, 0x1c, 0x6f, 0x72, 0x67, 0x2e, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x72, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x75, 0x6e, 0x6c, 0x69,
	0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Execution_proto_rawDescOnce sync.Once
	file_Execution_proto_rawDescData = file_Execution_proto_rawDesc
)

func file_Execution_proto_rawDescGZIP() []byte {
	file_Execution_proto_rawDescOnce.Do(func() {
		file_Execution_proto_rawDescData = protoimpl.X.CompressGZIP(file_Execution_proto_rawDescData)
	})
	return file_Execution_proto_rawDescData
}

var file_Execution_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_Execution_proto_goTypes = []interface{}{
	(*RedirectParameters)(nil),   // 0: contester.proto.RedirectParameters
	(*ExecutionResultFlags)(nil), // 1: contester.proto.ExecutionResultFlags
	(*ExecutionResultTime)(nil),  // 2: contester.proto.ExecutionResultTime
	(*Blob)(nil),                 // 3: contester.proto.Blob
}
var file_Execution_proto_depIdxs = []int32{
	3, // 0: contester.proto.RedirectParameters.buffer:type_name -> contester.proto.Blob
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_Execution_proto_init() }
func file_Execution_proto_init() {
	if File_Execution_proto != nil {
		return
	}
	file_Blobs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Execution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedirectParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Execution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionResultFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Execution_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionResultTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Execution_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Execution_proto_goTypes,
		DependencyIndexes: file_Execution_proto_depIdxs,
		MessageInfos:      file_Execution_proto_msgTypes,
	}.Build()
	File_Execution_proto = out.File
	file_Execution_proto_rawDesc = nil
	file_Execution_proto_goTypes = nil
	file_Execution_proto_depIdxs = nil
}
